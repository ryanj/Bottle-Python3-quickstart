#!/usr/bin/env python

import os, pymongo, bottle, json, bson
from urllib import request

application = bottle.Bottle()
app = application

@app.route('/')
@app.route('/hello')
@app.route('/hello/<name>')
def greet(name='Stranger'):
    return 'Hello %s, how are you?' % name


# mongoimport -d parks -c parkpoints --type json --file app-root/data/parkcoord.json -h $OPENSHIFT_MONGODB_DB_HOST -u admin -p $OPENSHIFT_MONGODB_DB_PASSWORD
# db.parkpoints.ensureIndex( { pos : "2d" } );


@app.route("/parks")
def parks():
    #setup the connection
    conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
    db = conn.parks

    #query the DB for all the parkpoints
    result = db.parkpoints.find()

    #Now turn the results into valid JSON
    return json.dumps(str(list(result)))

#return a specific park given it's mongo _id
@app.get("/park")
def onePark_form():
    return '''<form method="POST" action="/park">
                <input name="parkId" value="Park ID" type="text" />
                <input type="submit" />
              </form>'''

@app.post("/park")
def onePark():
    #setup the connection
    conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
    db = conn.parks

    #query based on the objectid
    parkId = float(bottle.request.forms.get('parkId'))
    result = db.parkpoints.find({'_id': bson.objectid.ObjectId(parkId)})

    #turn the results into valid JSON
    return json.dumps(str(list(result)))

#find parks near a lat and long passed in as query parameters (near?lat=45.5&lon=-82)
@app.get("/parks/near")
def near_form():
    return '''<form method="POST" action="/parks/near">
                <input name="lat" value="Latitude" type="text" />
                <input name="lon" value="Longtitude" type="text" />
                <input type="submit" />
              </form>'''

@app.post("/parks/near")
def near():
    #setup the connection
    conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
    db = conn.parks

    #get the request parameters
    lat = float(bottle.request.forms.get('lat'))
    lon = float(bottle.request.forms.get('lon'))

    #use the request parameters in the query
    result = db.parkpoints.find({"pos" : { "$near" : [lat,lon]}}).limit(10)

    #turn the results into valid JSON
    return json.dumps(str(list(result)))

#find parks with a certain name (using regex) near a lat long pair such as above
@app.route("/parks/name/near")
def nameNear(name):
    #setup the connection
    conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
    db = conn.parks

    #get the request parameters
    lat = float(request.args.get('lat'))
    lon = float(request.args.get('lon'))

    #compile the regex we want to search for and make it case insensitive
    myregex = re.compile(name, re.I)

    #use the request parameters in the query along with the regex
    result = db.parkpoints.find({"Name" : myregex, "pos" : { "$near" : [lon,lat]}})

    #turn the results into valid JSON
    return json.dumps(str(list(result)))
